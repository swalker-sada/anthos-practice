---
timeout: 3600s
logsBucket: "gs://${PROJECT_ID}/logs/cloudbuild"
substitutions:
  _SSH: "true"
  _HUB: "true"
  _CLOUDOPS_GSA: "true"
  _CICD_GSA: "true"
  _CNRM_GSA: "true"
  _GCR: "true"
tags:
  - project-setup
steps:
  - name: gcr.io/${PROJECT_ID}/platform-installer
    id: "prod-gcp-ssh-key"
    dir: infrastructure/prod/gcp/ssh_key
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        [[ "${_SSH}" == "false" ]] && exit 0
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false -lock=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/platform-installer
    id: "prod-gcp-hub-gsa"
    dir: infrastructure/prod/gcp/hub_gsa
    waitFor: ["-"]
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        [[ "${_HUB}" == "false" ]] && exit 0
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false -lock=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/platform-installer
    id: "prod-gcp-cloud-ops-gsa"
    dir: infrastructure/prod/gcp/cloud_ops_gsa
    waitFor: ["-"]
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        [[ "${_CLOUDOPS_GSA}" == "false" ]] && exit 0
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false -lock=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/platform-installer
    id: "prod-gcp-cicd-gsa"
    dir: infrastructure/prod/gcp/cicd_gsa
    waitFor: ["-"]
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        [[ "${_CICD_GSA}" == "false" ]] && exit 0
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false -lock=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/platform-installer
    id: "prod-gcp-cnrm-gsa"
    dir: infrastructure/prod/gcp/cnrm_gsa
    waitFor: ["-"]
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        [[ "${_CNRM_GSA}" == "false" ]] && exit 0
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false -lock=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/platform-installer
    id: "prod-gcp-gcr-public"
    dir: infrastructure/prod/gcp/gcr
    waitFor: ["-"]
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        [[ "${_GCR}" == "false" ]] && exit 0
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false -lock=false terraform.tfplan
