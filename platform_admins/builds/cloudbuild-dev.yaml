# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
timeout: 3600s
logsBucket: "gs://${PROJECT_ID}/logs/cloudbuild"
substitutions:
  _GCP_VPC: "true"
  _GKE: "true"
  _ASM: "true"
tags:
  - dev
steps:
  - name: gcr.io/${PROJECT_ID}/platform-installer
    id: "dev-gcp-vpc"
    dir: infrastructure/dev/gcp/vpc
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        [[ "${_GCP_VPC}" == "false" ]] && exit 0
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false -lock=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/platform-installer
    id: "dev-gcp-gke"
    dir: infrastructure/dev/gcp/gke
    waitFor: ['dev-gcp-vpc']
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        [[ "${_GKE}" == "false" ]] && exit 0
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false -lock=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/platform-installer
    id: "dev-gcp-gke-mci"
    dir: infrastructure/dev/gcp/mci
    waitFor: ['dev-gcp-gke']
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        [[ "${_GKE}" == "false" ]] && exit 0
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false -lock=false terraform.tfplan          
  - name: gcr.io/${PROJECT_ID}/platform-installer
    id: "dev-gcp-asm"
    dir: infrastructure/dev/gcp/asm
    waitFor: ['dev-gcp-gke']
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        [[ "${_ASM}" == "false" ]] && exit 0
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false -lock=false terraform.tfplan
