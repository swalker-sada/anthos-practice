# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

.secure-ingress:
  image:
    name: gcr.io/${PROJECT_ID}/platform-installer
  script:
    # Activate the cicd-sa service account and set project
    - echo "${GCP_CICD_SA_KEY}" | base64 -d > ${CI_PROJECT_DIR}/cicd-sa-key.json
    - cat ${CI_PROJECT_DIR}/cicd-sa-key.json
    - gcloud auth activate-service-account cicd-sa@${PROJECT_ID}.iam.gserviceaccount.com --key-file=${CI_PROJECT_DIR}/cicd-sa-key.json --project=${PROJECT_ID}
    - gcloud config set project ${PROJECT_ID}
    # Set terraform creds
    - export GOOGLE_PROJECT=${PROJECT_ID}
    - export GOOGLE_CREDENTIALS=$(cat cicd-sa-key.json)
    # Configure terraform backend, variables and remote state tf files
    - cd ${CI_PROJECT_DIR}/services/${SVC}/prod/traffic/dns
    - sed -e s/PROJECT_ID/${PROJECT_ID}/ backend.tf_tmpl > backend.tf
    - sed -e s/PROJECT_ID/${PROJECT_ID}/ variables.tf_tmpl > variables.tf
    - sed -e s/PROJECT_ID/${PROJECT_ID}/ prod_gcp_gke_remote_state.tf_tmpl > prod_gcp_gke_remote_state.tf
    # Apply terraform
    - terraform init
    - terraform plan -out terraform.tfplan
    - terraform apply -input=false -lock=false terraform.tfplan
    # Define variables
    - export BOA_GCLB_IP_ADDRESS=$(terraform output boa-gclb-ip-address)
    - export GKE_PROD_1_NAME=$(terraform output gke_prod_1_name)
    - export GKE_PROD_1_LOCATION=$(terraform output gke_prod_1_location)
    - export GKE_PROD_2_NAME=$(terraform output gke_prod_2_name)
    - export GKE_PROD_2_LOCATION=$(terraform output gke_prod_2_location)
    # Prep multiclusteringress
    - cd ${CI_PROJECT_DIR}/services/${SVC}/prod/traffic/ingress
    - kustomize edit add annotation networking.gke.io/static-ip:$BOA_GCLB_IP_ADDRESS
    - sed -e s/PROJECT_ID/${PROJECT_ID}/g multiclusteringress-frontend-patch.yaml_tmpl > multiclusteringress-frontend-patch.yaml
    - |
      sed -e s/GKE_PROD_1_LOCATION/$GKE_PROD_1_LOCATION/g \
        -e s/GKE_PROD_1_NAME/$GKE_PROD_1_NAME/g \
        -e s/GKE_PROD_2_LOCATION/$GKE_PROD_2_LOCATION/g \
        -e s/GKE_PROD_2_NAME/$GKE_PROD_2_NAME/g \
        multiclusterservice-frontend-patch.yaml_tmpl > multiclusterservice-frontend-patch.yaml
    # Prep gateway and virtualservice
    - cd ${CI_PROJECT_DIR}/services/${SVC}/prod/traffic/virtualservice
    - sed -e s/PROJECT_ID/$PROJECT_ID/g gateway-frontend-patch.yaml_tmpl > gateway-frontend-patch.yaml
    - sed -e s/PROJECT_ID/$PROJECT_ID/g virtualservice-frontend-patch.yaml_tmpl > virtualservice-frontend-patch.yaml
    # Build traffic manifest
    - mkdir -p ${CI_PROJECT_DIR}/output
    - cd ${CI_PROJECT_DIR}/services/${SVC}/prod
    - kustomize build --load_restrictor none . > ${CI_PROJECT_DIR}/output/${SVC}-hydrated.yaml
    - cat ${CI_PROJECT_DIR}/output/${SVC}-hydrated.yaml
  artifacts:
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR}/output/*.yaml

